name: CI

on:
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build & Test (Linux)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Prepare + cache vcpkg binary cache
      - name: Prepare vcpkg cache dir
        run: |
          mkdir -p ~/.cache/vcpkg/archives
          echo "VCPKG_DEFAULT_BINARY_CACHE=$HOME/.cache/vcpkg/archives" >> $GITHUB_ENV

      - name: Cache vcpkg binary cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/vcpkg/archives
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('vcpkg.json', 'vcpkg-configuration.json') }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-

      - name: Install build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake ninja-build git

      - name: Bootstrap vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          ./vcpkg/bootstrap-vcpkg.sh
        env:
          VCPKG_FORCE_SYSTEM_BINARIES: 1

      - name: Install raylib via vcpkg
        run: |
          ./vcpkg/vcpkg install raylib:x64-linux

      - name: Configure (CMake)
        run: |
          cmake -S . -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_TOOLCHAIN_FILE=${GITHUB_WORKSPACE}/vcpkg/scripts/buildsystems/vcpkg.cmake

      - name: Build
        run: cmake --build build --config Release -j

      - name: Test (CTest)
        run: |
          if [ -f build/CTestTestfile.cmake ] && grep -q 'add_test' build/CTestTestfile.cmake; then
            ctest --test-dir build --output-on-failure --output-junit test-report.xml
          else
            echo "No tests defined. Skipping ctest."
            touch test-report.xml
          fi

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: test-report.xml
